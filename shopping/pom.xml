<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.demo</groupId>
  <artifactId>jfinal_demo_for_maven</artifactId>
  <packaging>war</packaging>
  <version>3.5</version>
  <name>jfinal_demo_for_maven Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
  </properties>
  
  	<!-- 使用阿里 maven 库 -->
	<repositories>
		<repository>
			<id>ali-maven</id>
			<url>http://maven.aliyun.com/nexus/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
				<checksumPolicy>fail</checksumPolicy>
			</snapshots>
		</repository>
	</repositories>
	
	<!-- 添加快照版本库,updatePolicy: always、daily、interval、never -->
	<!-- repositories>
    <repository>
           <id>sonatype-nexus-snapshots</id>
           <name>Sonatype Nexus Snapshots</name>
           <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
           <releases>
               <enabled>false</enabled>
           </releases>
           <snapshots>
               <enabled>true</enabled>
               <updatePolicy>daily</updatePolicy>
           </snapshots>
       </repository>
  	</repositories -->
	
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
    	<groupId>com.jfinal</groupId>
    	<artifactId>jetty-server</artifactId>
    	<version>2018.11</version>
    	<!--
			此处的 scope 值为 compile 仅为支持 IDEA 下启动项目
			打 war 包时需要改成 provided，以免将一些无用的 jar 打进去
		-->
    </dependency>
    
    <dependency>
    	<groupId>com.jfinal</groupId>
    	<artifactId>jfinal</artifactId>
    	<version>3.5</version>
    </dependency>
    
    <!-- 避免控制台输出如下提示信息：
		 SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
		 项目中实际上用不到这个 jar 包，本 jfinal demo 用不上这个依赖，在此仅为大家
		 在未来基于 jfinal demo 为模板做开发时做准备工作
		 注意：eclipse 下可以将 scope 设置为 provided
		 -->
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-nop</artifactId>
		<version>1.7.25</version>
		<!-- 打包前改成 provided，此处使用 compile 仅为支持 IDEA -->
		<scope>compile</scope>
	</dependency>
    
    <dependency>
    	<groupId>log4j</groupId>
    	<artifactId>log4j</artifactId>
    	<version>1.2.16</version>
    </dependency>
    <dependency>
    	<groupId>mysql</groupId>
    	<artifactId>mysql-connector-java</artifactId>
    	<version>5.1.44</version>
    </dependency>
	<dependency>
		<groupId>com.alibaba</groupId>
		<artifactId>druid</artifactId>
		<version>1.0.29</version>
	</dependency>
    <dependency>
    	<groupId>com.jfinal</groupId>
    	<artifactId>cos</artifactId>
    	<version>2017.5</version>
    </dependency>
    
    <!--
    	当需要支持 JSP、JSTL 时，开启下面的依赖，注意 IDEA 下开发需要将 scope 改成 compile，
    	但打包部署到独立容器时需要再改为 provided，以免打进去一些不需要的 jar 包
    
	<dependency>
		<groupId>org.eclipse.jetty</groupId>
		<artifactId>jetty-jsp</artifactId>
		<version>9.2.26.v20180806</version>
		<scope>provided</scope>
	</dependency>
	-->
	
  </dependencies>
  
  <build>
    <finalName>jfinal_demo_for_maven</finalName>
	    <plugins>
	    	<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
					<!-- java8 保留参数名编译参数，支持 action 带参 -->
					<compilerArgument>-parameters</compilerArgument>
					<compilerArguments>
						<verbose />
					</compilerArguments>
				</configuration>
			</plugin>
			
			<!-- 开发阶段可选的项目启动方式
				 启动命令: mvn jetty:run
				 指定端口号启动: mvn jetty:run -Djetty.port=8080 (必须先删掉后面的 httpConnector 配置)
				 http://www.eclipse.org/jetty/documentation/current/jetty-maven-plugin.html#jetty-run-goal
				-->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.4.12.v20180830</version>
				<configuration>
					<httpConnector>
						<port>80</port>
					</httpConnector>
					<webApp>
						<contextPath>/</contextPath>
					</webApp>
					<scanIntervalSeconds>5</scanIntervalSeconds>
				</configuration>
			</plugin>
			
			
			<!-- 打包为可执行 jar 包的插件，具体用法参考
				 maven-assembly-plugin 官方文档
				-->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptors>
                        <descriptor>package.xml</descriptor>
                    </descriptors>
                    <outputDirectory>${project.build.directory}/dist/</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>com.demo.common.DemoConfig</mainClass>
                            <classpathPrefix>lib/</classpathPrefix>
                            <addClasspath>true</addClasspath>
                        </manifest>
                        <manifestEntries>
                            <!-- 在 MANIFEST.MF 中生成 Class-Path: resources/ -->
                            <Class-Path>resources/</Class-Path>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
	  </plugins>
  </build>
</project>
